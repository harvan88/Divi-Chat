generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id           String        @id @default(cuid())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  responder    String?       // "human" (por defecto), "openai", "bot", etc.
  messages     Message[]
  participants Participant[]
}

model Message {
  id              String           @id @default(cuid())
  chatId          String
  chat            Chat             @relation(fields: [chatId], references: [id])
  authorId        String?
  author          Participant?     @relation("MessageAuthor", fields: [authorId], references: [id])
  toId            String?
  to              Participant?     @relation("MessageRecipient", fields: [toId], references: [id])
  responder String? // "human" (por defecto), "openai", "bot", etc.
  content         String
  createdAt       DateTime         @default(now())
  channelMessages ChannelMessage[]
}

model Participant {
  id       String    @id @default(cuid())
  chatId   String
  chat     Chat      @relation(fields: [chatId], references: [id])
  phone    String    @unique
  messages Message[] @relation("MessageAuthor")
  received Message[] @relation("MessageRecipient")
}


model ChannelMessage {
  id         String   @id @default(cuid())
  messageId  String
  provider   String
  rawPayload Json
  createdAt  DateTime @default(now())

  message Message @relation(fields: [messageId], references: [id])
}
